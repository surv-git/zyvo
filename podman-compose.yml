version: '3.8'

services:
  # Nginx reverse proxy with SSL termination
  nginx:
    image: nginx:alpine
    container_name: zyvo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - service1
      - service2
      - service3
      - service4
    restart: unless-stopped
    networks:
      - zyvo-network

  # Let's Encrypt Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: zyvo-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@domain.com --agree-tos --no-eff-email -d your-domain.com
    networks:
      - zyvo-network

  # Redis cache service
  redis:
    image: redis:7-alpine
    container_name: zyvo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass your-redis-password
    restart: unless-stopped
    networks:
      - zyvo-network

  # MongoDB database
  mongodb:
    image: mongo:7
    container_name: zyvo-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: your-mongo-password
      MONGO_INITDB_DATABASE: zyvo
    volumes:
      - mongodb-data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - zyvo-network

  # Service 1 - Web application
  service1:
    image: localhost/zyvo-service1:latest
    container_name: zyvo-service1
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://admin:your-mongo-password@mongodb:27017/zyvo?authSource=admin
      - SERVICE_NAME=service1
      - PORT=3000
    depends_on:
      - redis
      - mongodb
    restart: unless-stopped
    networks:
      - zyvo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service 2 - Web application
  service2:
    image: localhost/zyvo-service2:latest
    container_name: zyvo-service2
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://admin:your-mongo-password@mongodb:27017/zyvo?authSource=admin
      - SERVICE_NAME=service2
      - PORT=3000
    depends_on:
      - redis
      - mongodb
    restart: unless-stopped
    networks:
      - zyvo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service 3 - Web application
  service3:
    image: localhost/zyvo-service3:latest
    container_name: zyvo-service3
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://admin:your-mongo-password@mongodb:27017/zyvo?authSource=admin
      - SERVICE_NAME=service3
      - PORT=3000
    depends_on:
      - redis
      - mongodb
    restart: unless-stopped
    networks:
      - zyvo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service 4 - Web application
  service4:
    image: localhost/zyvo-service4:latest
    container_name: zyvo-service4
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://admin:your-mongo-password@mongodb:27017/zyvo?authSource=admin
      - SERVICE_NAME=service4
      - PORT=3000
    depends_on:
      - redis
      - mongodb
    restart: unless-stopped
    networks:
      - zyvo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# Named volumes for persistent data
volumes:
  redis-data:
    driver: local
  mongodb-data:
    driver: local

# Custom network for service communication
networks:
  zyvo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16