# Load balancing upstream for services
upstream backend_services {
    least_conn;
    server main:80 weight=2 max_fails=3 fail_timeout=30s;
    server service1:80 weight=1 max_fails=3 fail_timeout=30s;
    server service2:80 weight=1 max_fails=3 fail_timeout=30s;
    server service3:80 weight=1 max_fails=3 fail_timeout=30s;
    server service4:80 weight=1 max_fails=3 fail_timeout=30s;
}

# HTTP server for IP-based deployment
server {
    listen 80;
    server_name 44.247.215.244 _;

    # Let's Encrypt challenge location (kept for future domain setup)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Security headers (basic set for HTTP)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Main application routing
    location / {
        proxy_pass http://backend_services;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API routes for individual services
    location /api/service1/ {
        proxy_pass http://service1:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/service2/ {
        proxy_pass http://service2:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/service3/ {
        proxy_pass http://service3:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/service4/ {
        proxy_pass http://service4:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# HTTPS server configuration (disabled for IP-based deployment)
# Let's Encrypt doesn't issue certificates for IP addresses
# Uncomment and configure when you have a domain name
